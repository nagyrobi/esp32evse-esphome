# Core firmware metadata so the node shows up with a friendly name inside the ESPHome
# Dashboard and other management tools.
esphome:
  name: esp32evse_dev

# Target board definition—ensures the correct pin map and toolchain are used.
esp32:
  board: esp32dev

# Enable verbose logging during development so serial output captures EVSE
# protocol messages and troubleshooting details.
logger:
  level: DEBUG

# Configure both the primary Wi-Fi connection and a fallback access point to
# make the device easy to provision even if the main network credentials are
# incorrect.
wifi:
  ssid: "YOUR_WIFI"
  password: "YOUR_PASSWORD"
  ap:
    ssid: "esp32evse"
    password: "changeme"

# Allow ESPHome to expose a captive portal when the device boots into access
# point mode.
captive_portal:

# Native API support for remote control and monitoring.
api:

# Enable over-the-air firmware updates to avoid physical serial connections once
# the node is deployed.
ota:

# Serial port wiring for the EVSE controller—communication happens over AT
# commands at 115200 baud.
uart:
  id: evse_uart
  tx_pin: GPIO17
  rx_pin: GPIO16
  baud_rate: 115200

# Load the custom component from this repository instead of the default
# ESPHome package index.
external_components:
  - source:
      type: local
      path: components
    components: [esp32evse]

# Instantiate the EVSE component and link it to the configured UART bus.
esp32evse:
  id: evse
  uart_id: evse_uart

# Binary sensors mirror boolean states (such as Wi-Fi connectivity) coming from
# the EVSE controller.
binary_sensor:
  - platform: esp32evse
    esp32evse_id: evse
    pending_authorization:
      name: "EVSE Pending Authorization"
    wifi_connected:
      name: "EVSE Wi-Fi Connected"

# Buttons provide one-shot actions such as forcing a reset or authorizing a
# vehicle for charging.
button:
  - platform: esp32evse
    esp32evse_id: evse
    authorize:
      name: "EVSE Authorize"
    reset:
      name: "EVSE Restart"

# Numeric entities expose adjustable parameters like charging current limits to
# automation rules.
number:
  - platform: esp32evse
    esp32evse_id: evse
    charging_current:
      name: "EVSE Charging Current"
    default_charging_current:
      name: "EVSE Default Charging Current"
    maximum_charging_current:
      name: "EVSE Maximum Charging Current"
    consumption_limit:
      name: "EVSE Consumption Limit"
    default_consumption_limit:
      name: "EVSE Default Consumption Limit"
    charging_time_limit:
      name: "EVSE Charging Time Limit"
    default_charging_time_limit:
      name: "EVSE Default Charging Time Limit"
    under_power_limit:
      name: "EVSE Under Power Limit"
    default_under_power_limit:
      name: "EVSE Default Under Power Limit"

# Real-time measurements from the EVSE such as temperatures, power draw, and
# Wi-Fi signal strength.
sensor:
  - platform: esp32evse
    esp32evse_id: evse
    temperature_high:
      name: "EVSE Temperature High"
    temperature_low:
      name: "EVSE Temperature Low"
    # If your installation only uses a single probe, expose it via the combined
    # ``temperature`` key instead of the individual high/low entries:
    # temperature:
    #   name: "EVSE Temperature"
    emeter_power:
      name: "EVSE Power"
    emeter_charging_time:
      name: "EVSE Charging Time"
    emeter_session_time:
      name: "EVSE Session Time"
    energy_consumption:
      name: "EVSE Session Energy"
    total_energy_consumption:
      name: "EVSE Total Energy"
    voltage_l1:
      name: "EVSE Voltage L1"
    voltage_l2:
      name: "EVSE Voltage L2"
    voltage_l3:
      name: "EVSE Voltage L3"
    current_l1:
      name: "EVSE Current L1"
    current_l2:
      name: "EVSE Current L2"
    current_l3:
      name: "EVSE Current L3"
    wifi_rssi:
      name: "EVSE Wi-Fi RSSI"
    heap_used:
      name: "EVSE Heap Used"
    heap_total:
      name: "EVSE Heap Total"

# Switches toggle on/off features like session enablement or manual
# availability.
switch:
  - platform: esp32evse
    esp32evse_id: evse
    enable:
      name: "EVSE Charging Enable"
    request_authorization:
      name: "EVSE Request Authorization"
    available:
      name: "EVSE Available"
    three_phase_meter:
      name: "EVSE Three-Phase Meter"

# Text sensors carry metadata strings such as firmware details and network
# identifiers that are useful for diagnostics.
text_sensor:
  - platform: esp32evse
    esp32evse_id: evse
    state:
      name: "EVSE State (J1772)"
    device_name:
      name: "EVSE Device Name"
    device_time:
      name: "EVSE Device Time"
    wifi_sta_ssid:
      name: "EVSE Wi-Fi SSID"
    wifi_sta_ip:
      name: "EVSE Wi-Fi IP"
    wifi_sta_mac:
      name: "EVSE Wi-Fi MAC"
    chip:
      name: "EVSE MCU"
    build_time:
      name: "EVSE Build Time"
    version:
      name: "EVSE Firmware Version"
    idf_version:
      name: "EVSE IDF Version"
